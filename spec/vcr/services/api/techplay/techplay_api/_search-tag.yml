---
http_interactions:
- request:
    method: get
    uri: https://techplay.jp/event/search?from=&keyword=&pref=23&sort=started_asc&tag=&to=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Cache-Control:
      - no-cache
      - no-store
      Date:
      - Sun, 02 Jul 2017 00:06:57 GMT
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6IkJyb0VLWk1BTnFsMmphVlk1OTZmMGc9PSIsInZhbHVlIjoiRzBRTzltRGpKNDM2dGx1NVNcL3B2TjFYV1FLR0NLUTR2N25ydmw3bWxLY0FTRWw1TmFUODd0YTVJc3RRTzBDcVVVaXJcL2F1VHB6czRpQlZCdUhHOWx2Zz09IiwibWFjIjoiZmExMDg2MDk2NTNjMWE3YjhjZGZiMTU1M2EyYmVhODFlOGRmMDViNzk1MjU4MzdjYTkwNjNmYTA4YzMwZjIxMSJ9;
        expires=Sun, 02-Jul-2017 02:06:57 GMT; Max-Age=7200; path=/
      - d_hash=eyJpdiI6IktVdkZKaXJEaFlpSHZJS1lyajZYMmc9PSIsInZhbHVlIjoiY01sdFp6VXpLek54TXNWQ3p4Vk1ycGwxTGw1NDZXaVN6NjhTengrNEdhTT0iLCJtYWMiOiI5NjBlNDc1ZjVlY2ZlYzgzYmI0MTdkMTNlMGRjM2Q1ZTI5NWViYmNjMjg1NGE4YzU4MDRhODFiNTNiMzJlMTVmIn0%3D;
        expires=Fri, 01-Jul-2022 00:06:56 GMT; Max-Age=157679999; path=/; HttpOnly
      - laravel_session=eyJpdiI6IkJPQTFHZTd0UDJCa3FDVVF6S05qSFE9PSIsInZhbHVlIjoiQSsycVdFWHZLNHlSZGVjaVU1QXhcL1NoMzdNaEQ1REp4N3pmbUZkSlhaK3Y4SWh6eE5CcjlQZm9OekNabnR0YkhNT2Z2V0daaThKQVNaUGhLeTRhSWF3PT0iLCJtYWMiOiJiNmFiMWNhNzExNzg0YWYwZGQyMGQ4NjdiNzE5MzllMjZlNjQzN2U2NmE3YjhjNjM5MzQwNjAwZWQzMjUyNjYwIn0%3D;
        expires=Sun, 02-Jul-2017 02:06:57 GMT; Max-Age=7200; path=/; HttpOnly
      Pragma:
      - no-cache
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 02 Jul 2017 00:07:01 GMT
recorded_with: VCR 3.0.3
