---
http_interactions:
- request:
    method: get
    uri: https://techplay.jp/event/search?from=&keyword=&pref=23&sort=started_asc&tag=&to=
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Content-Type:
      - text/html; charset=UTF-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Cache-Control:
      - no-cache
      - no-store
      Date:
      - Sun, 02 Jul 2017 00:47:02 GMT
      Set-Cookie:
      - XSRF-TOKEN=eyJpdiI6ImN3S1FoRzdRdzRIcjRoZDFhTlFMYnc9PSIsInZhbHVlIjoiK01DbzhXeWhad0hcL3hMQVwvWWpDV1BxdnR4dnNaU2NTU1NxcFhOVFhKWjB5OUFGaFg0dVk2TDV4cnNHWVRrUTRMRXhxRmRwWmFNU2dtZGpId3RpcTJvQT09IiwibWFjIjoiZWZmMGQ3MmQ3MjQ2YmFjZDViYjQ4NTVhZWI3MDBjOTEwODkxZjRiMDJlOGJkYWY2ODdiZDA5YTNiMzI5YjE3OCJ9;
        expires=Sun, 02-Jul-2017 02:47:02 GMT; Max-Age=7200; path=/
      - d_hash=eyJpdiI6InZPVkFUMUxCUGI3TjMyK20zeXFnR3c9PSIsInZhbHVlIjoiREZKTmk3c2h6UEtab2U4a2p1dzNmQndIa1Nha2lTNmtaNEc0ODZhNDhJTT0iLCJtYWMiOiIyYTNlNjAwNzliOTY2NjIyYmE2ODc5MWMwYmEyZDEzMWRhYzYxMWIxMTdkZTJkNWYwMTIwYzI1NzAzYzNkZmZkIn0%3D;
        expires=Fri, 01-Jul-2022 00:47:02 GMT; Max-Age=157680000; path=/; HttpOnly
      - laravel_session=eyJpdiI6InhlMXRPMEN1dit4bndJTUtzNTBDbkE9PSIsInZhbHVlIjoieGdRRVVFWGpRdlJpZ1BGdENvRk9iXC9RZTUwVE9lbEJwV2VjazM4ZlJiWmxPblFROFhrK0x1elFDdGtBMThtVlZoQ0ljZlJJcUNOSlwvNmdyTFhLZHZwZz09IiwibWFjIjoiMGI2MGVmZTE4NzdiMzJjYjBkYzkzZDFlZWFmMTliZjQ2ZTBlNjM3ZTk2N2M0ODhhMDEyZDY0MTE0ZGVhYmZmOSJ9;
        expires=Sun, 02-Jul-2017 02:47:02 GMT; Max-Age=7200; path=/; HttpOnly
      Pragma:
      - no-cache
      X-Frame-Options:
      - SAMEORIGIN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 02 Jul 2017 00:47:02 GMT
recorded_with: VCR 3.0.3
